// <auto-generated />
using System;
using DocumentController.WebAPI.Migrations;
using DocumentController.WebAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DocumentController.WebAPI.Migrations
{
    [DbContext(typeof(DocumentControllerDbContext))]
    partial class DocumentControllerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DocumentController.WebAPI.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Department")
                        .HasColumnName("department");

                    b.Property<string>("DocumentNumber")
                        .HasColumnName("document_number");

                    b.Property<string>("Function")
                        .HasColumnName("function");

                    b.Property<string>("Location")
                        .HasColumnName("location");

                    b.Property<string>("Status")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DocumentNumber = "DOC-01"
                        });
                });

            modelBuilder.Entity("DocumentController.WebAPI.Models.DocumentVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("DescriptionOfChange")
                        .HasColumnName("description_of_change");

                    b.Property<int>("DocumentId")
                        .HasColumnName("document_id");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnName("effective_date");

                    b.Property<string>("IsRemoved")
                        .HasColumnName("is_removed");

                    b.Property<string>("Location_Editable")
                        .HasColumnName("location_editable");

                    b.Property<string>("Location_PDF")
                        .HasColumnName("location_pdf");

                    b.Property<string>("Progress")
                        .HasColumnName("progress");

                    b.Property<string>("PurposeOfChange")
                        .HasColumnName("purpose_of_change");

                    b.Property<string>("Remarks")
                        .HasColumnName("remarks");

                    b.Property<string>("Requestor")
                        .HasColumnName("requestor");

                    b.Property<string>("VersionNumber")
                        .HasColumnName("version_number");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("document_versions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DocumentId = 1,
                            EffectiveDate = new DateTime(2018, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            VersionNumber = "1"
                        },
                        new
                        {
                            Id = 2,
                            DocumentId = 1,
                            EffectiveDate = new DateTime(2018, 12, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            VersionNumber = "2"
                        });
                });

            modelBuilder.Entity("DocumentController.WebAPI.Models.DocumentVersion", b =>
                {
                    b.HasOne("DocumentController.WebAPI.Models.Document", "Document")
                        .WithMany("DocumentVersions")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
